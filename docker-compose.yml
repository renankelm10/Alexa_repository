version: '3.8'

services:
  alexa-skill:
    build: .
    container_name: alexa-skill-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - N8N_WEBHOOK_URL=${N8N_WEBHOOK_URL:-https://your-n8n-instance.com/webhook/alexa-skill}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - alexa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alexa-skill.rule=Host(`seu-dominio.com`)"
      - "traefik.http.routers.alexa-skill.tls=true"
      - "traefik.http.routers.alexa-skill.tls.certresolver=letsencrypt"

  nginx:
    image: nginx:alpine
    container_name: alexa-skill-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - alexa-skill
    networks:
      - alexa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Opcional: Redis para cache
  redis:
    image: redis:7-alpine
    container_name: alexa-skill-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - alexa-network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Opcional: Monitoring com Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: alexa-skill-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - alexa-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Opcional: Grafana para visualização
  grafana:
    image: grafana/grafana:latest
    container_name: alexa-skill-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - alexa-network

networks:
  alexa-network:
    driver: bridge

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

