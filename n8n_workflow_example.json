{
  "name": "Alexa Skill Integration Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "alexa-skill",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.action}}",
              "operation": "equal",
              "value2": "get_response"
            }
          ]
        }
      },
      "id": "check-action-type",
      "name": "Check Action Type",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "user_input",
              "value": "={{$json.user_input}}"
            },
            {
              "name": "session_id",
              "value": "={{$json.context.session_id}}"
            },
            {
              "name": "user_id",
              "value": "={{$json.context.user_id}}"
            },
            {
              "name": "locale",
              "value": "={{$json.context.locale}}"
            }
          ]
        },
        "options": {}
      },
      "id": "extract-data",
      "name": "Extract Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        680,
        200
      ]
    },
    {
      "parameters": {
        "operation": "text",
        "options": {
          "systemMessage": "Você é um assistente virtual inteligente integrado com a Alexa. Responda de forma natural, útil e conversacional em português brasileiro. Mantenha as respostas concisas mas informativas, adequadas para serem faladas pela Alexa."
        },
        "text": "={{$json.user_input}}"
      },
      "id": "openai-chat",
      "name": "OpenAI Chat",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1,
      "position": [
        900,
        200
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "response_text",
              "value": "={{$json.response}}"
            },
            {
              "name": "processed_at",
              "value": "={{new Date().toISOString()}}"
            },
            {
              "name": "session_id",
              "value": "={{$('Extract Data').item.json.session_id}}"
            }
          ]
        },
        "options": {}
      },
      "id": "format-response",
      "name": "Format Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1120,
        200
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{$json}}"
      },
      "id": "respond-to-webhook",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1340,
        200
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "event_type",
              "value": "={{$json.event_type || 'alexa_interaction'}}"
            },
            {
              "name": "timestamp",
              "value": "={{$json.timestamp}}"
            },
            {
              "name": "source",
              "value": "={{$json.source}}"
            }
          ]
        },
        "options": {}
      },
      "id": "log-interaction",
      "name": "Log Interaction",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        680,
        400
      ]
    },
    {
      "parameters": {
        "operation": "create",
        "table": "alexa_interactions",
        "columns": "timestamp, session_id, user_id, request_type, intent_name, user_input, response_text, locale",
        "additionalFields": {}
      },
      "id": "save-to-database",
      "name": "Save to Database",
      "type": "n8n-nodes-base.sqlite",
      "typeVersion": 1,
      "position": [
        900,
        400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.user_input}}",
              "operation": "contains",
              "value2": "ajuda"
            }
          ]
        }
      },
      "id": "check-help-request",
      "name": "Check Help Request",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        900,
        100
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "response_text",
              "value": "Posso ajudá-lo com informações, responder perguntas, fazer cálculos, contar piadas, ou conversar sobre diversos assuntos. O que você gostaria de saber ou fazer?"
            }
          ]
        },
        "options": {}
      },
      "id": "help-response",
      "name": "Help Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1120,
        100
      ]
    },
    {
      "parameters": {
        "url": "https://api.openweathermap.org/data/2.5/weather",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "={{$json.user_input.match(/clima.*?([A-Za-z\\s]+)/)?.[1] || 'São Paulo'}}"
            },
            {
              "name": "appid",
              "value": "YOUR_OPENWEATHER_API_KEY"
            },
            {
              "name": "lang",
              "value": "pt_br"
            },
            {
              "name": "units",
              "value": "metric"
            }
          ]
        },
        "options": {}
      },
      "id": "weather-api",
      "name": "Weather API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        900,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.user_input}}",
              "operation": "contains",
              "value2": "clima"
            }
          ]
        }
      },
      "id": "check-weather-request",
      "name": "Check Weather Request",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        680,
        300
      ]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Check Action Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Action Type": {
      "main": [
        [
          {
            "node": "Extract Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Interaction",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Data": {
      "main": [
        [
          {
            "node": "Check Help Request",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check Weather Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Help Request": {
      "main": [
        [
          {
            "node": "Help Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "OpenAI Chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Weather Request": {
      "main": [
        [
          {
            "node": "Weather API",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "OpenAI Chat": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Help Response": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Response": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Interaction": {
      "main": [
        [
          {
            "node": "Save to Database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "versionId": "1"
}

